from src.values.value import Value

class Range(Value):
    """
    Represents a range value in SpyLang, generated by the '..' operator.
    """
    def __init__(self, start, end):
        super().__init__()
        if not isinstance(start, int) or not isinstance(end, int):
            raise ValueError("Range bounds must be integers.")
        self.start = start
        self.end = end

    def generate_elements(self):
        """
        Generates elements within the range.
        """
        return list(range(self.start, self.end + 1))

    def __repr__(self):
        return f"({self.start}..{self.end})"
    
